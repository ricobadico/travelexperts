{{!-- Static page html, design, handlebars templating by [Sheyi] and [Susan]
[Eric] provided tweaking to integrate with db data better, pass along req data, add variable travellercount
[Bob] helped get render to differ based on being logged in or not
[Susan] provided lots of style fixes, overall form structure --}}

<link rel="stylesheet" href='/css/order.css'>
{{>jumbotron}}

<!-- Navbar -->
{{#if loggedIn}} {{> navbarLoggedIn}} {{else}} {{> navbar}}{{/if}}

<div class="container">
    <!--Elements within transparent box -->
    <div class="orderBox">
        {{!-- Much of page wrapped in div, with hidden inputs throughout to pass data to next page --}}

        <form method="POST" action="orderPOST" class="needs-validation" novalidate> 
        
        <h1><i>Please Confirm Your Order</i> </h1>
        <hr />
        <div class="container">
            <div class="row">
                <div class="col-sm">
                    <h4> Package Name:</h4>
                </div>
                <div class="col-sm">
                    <p>{{PkgName}} </p>
                    {{!-- Each inserted value has a hidden form field that passes the data along in the form submit. --}}
                    {{!-- This saves us from needing to repeat database SELECT calls later on in app.js --}}
                    <input type="hidden" name="PkgName" value="{{PkgName}}"/> 
                </div>
            </div>

            {{!-- The package description is pretty minimal, just using the simple one-line data stored within the existing database.
            If we were to continue working with Travel Experts, we'd suggest we team up with the people who make the packages
            as there is room to have more robust information on this page --}}
            <div class="row">
                <div class="col-sm">
                    <h4>Description:</h4>
                </div>
                <div class="col-sm">
                    <p><i>{{PkgDesc}}</i></p>
                    <input type="hidden" name="PkgDesc" value="{{PkgDesc}}"/> 
                </div>
            </div>

            <div class="row">
                <div class="col-sm">
                    <h4>Order Date: </h4>
                </div>
                <div class="col-sm">
                    <p>{{date}}</p>
                </div>
            </div>

            <div class="row">
                <div class="col-sm">
                    <h4>Price:</h4>
                </div>
                <div class="col-sm">
                    <p id="packageSingleCost">${{PkgBasePrice}}.00</p>
                </div>
            </div>

            {{!-- Extra functionality to allow for buying multiple tickets [Eric] --}}
            {{!-- Adding a row to choose quantity of travellers --}}
            <div class="row">
                <div class="col-sm">
                    <h4>Number of travellers:</h4>
                </div>
                <div class="col-sm">
                    {{!-- This field has a function that updates total cost every time the user changes its value --}}
                    <input class="order-form-input" min="1" type="number" value="1" id="orderquantity" name="TravelerCount" onchange=updateTotal()>
                </div>
            </div>
            
            {{!-- Adding a row to show cost --}}
            <div class="row">
                <div class="col-sm">
                    <h4><b>Total Cost:</b></h4>
                </div>
                <div class="col-sm">
                    <p id="packageTotalCost">${{PkgBasePrice}}.00</p>
                    {{!-- In addition to showing the cost above with currency format, hide actual numeric cost in form value. --}}
                    <input type="hidden" id="totalCostFormField" name="OrderTotalCost" value ={{PkgBasePrice}}/>
                </div>
            </div>
        </div>
        <hr />

        {{!-- Adding a section for contact info that only appears if not logged in [Eric], [Bob]--}}
        {{#if loggedIn}}
            {{!-- CustomerID stored here if loggedin --}}
			<input type="hidden" id="{{uid}}" name="CustomerId" value="{{uid}}">
        
        {{else}}

            {{!-- Form inputs for customer to add contact info. This is inserted as a new customer in the DB --}}
            <h2>Please log in or provide your contact information below:</h2>
            <div class="form-row ">
	    			<div class="col-sm-6 ">
						<label for="firstName">First Name:</label><br/>
						<input class="form-control" type="text" name="firstName" id="firstName" required="required" placeholder="First Name">
						<div class="invalid-feedback">Please enter your first name</div><br/>
					</div>	

					<div class="col-sm-6 ">
						<label for="lastName">Last Name:</label><br/>
						<input class="form-control" type="text" name="lastName" id="lastName" required="required" placeholder="Last Name">
						<div class="invalid-feedback">Please enter your last name</div>
					</div>
				</div>

                <div class="form-row">	
	    			<div class="col-sm-6">
						<label for="email">Email:</label><br/>
						<input class="form-control" type="text" name="email" id="email" required="required" placeholder="Email" onchange="checkEmail(this)">
						<div class="invalid-feedback">Please enter your email</div>
						<br/>
					</div>	

					<div class="col-sm-6">
						<label for="email">Phone Number:</label><br/>
						<input class="form-control" type="tel" name="pNumber" id="pNumber" required="required" placeholder="Phone Number" onchange="checkNumber(this)">
						<div class="invalid-feedback">Please enter your phone number</div>
						<br/>
						<script src="js/phoneFormatter.js"></script>
					</div>
				</div>	

				<div class="form-row ">
	    			<div class="col-sm-6 mb-3">
						<label for="address">Address:</label>
						<input class="form-control" type="text" name="address" id="address" required="required" placeholder="Address">
						<div class="invalid-feedback">Please enter your address</div><br/>	
					</div>

					<div class="col-sm-6 mb-3">
						<label for="city">City:</label><br/>
						<input class="form-control" type="text" name="city" id="city" required="required" placeholder="City">
						<div class="invalid-feedback">Please enter your city</div>
					</div>

					<div class="col-sm-6 mb-3">
						<label for="prov">Province</label>
					    <select class="form-control" name="prov" id="prov" required="required">
					      <option>AB</option>
					      <option>BC</option>
					      <option>MB</option>
					      <option>NB</option>
					      <option>NL</option>
					      <option>NS</option>
					      <option>NT</option>
					      <option>NU</option>
					      <option>ON</option>
					      <option>PE</option>
					      <option>QC</option>
					      <option>SK</option>
					      <option>YT</option>
					    </select>
					</div>

					<div class="col-sm-6 mb-3">
						<label for="pCode">Postal Code:</label><br/>
						<input class="form-control" type="text" name="pCode" id="pCode" required="required" placeholder="Postal Code" onchange="checkPcode()">
						<div class="invalid-feedback">Please enter your postal code</div>
					</div>		
				</div>	
        {{/if}}

        {{!-- Extra hidden values passed along the from the previous page to the next server function --}}
        <input type="hidden" name="PackageId" value="{{PackageId}}"/>
        <input type="hidden" name="PkgStartDate" value="{{PkgStartDate}}"/>
        <input type="hidden" name="PkgEndDate" value="{{PkgEndDate}}"/>

        <input class="btn btn-info"type="submit"value="Checkout"/>
        </form>
    </div>
    
</div>

{{!-- Verification script --}}
<script src="js/validateForm.js"></script>	

<script>
    // Updates total cost field when adding quantity

    const updateTotal = () => {
        // Grab relevant fields
        let packageSingleCost = {{PkgBasePrice}};
        let quantity = document.getElementById("orderquantity");
        let packageTotalCost = document.getElementById("packageTotalCost");

        // Add calculated value to field in currency format
        packageTotalCost.innerHTML = `$${quantity.value * packageSingleCost}.00`;
        // Add to form data in numeric format
        document.getElementById("totalCostFormField").value = quantity.value * packageSingleCost;
    }
</script>
